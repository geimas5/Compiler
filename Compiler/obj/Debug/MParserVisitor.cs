//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\mariusg\Documents\Visual Studio 2013\Projects\Compiler\Compiler\Parser\Antlr\MParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Compiler.Parser.Antlr {
 
	using Compiler.SyntaxTree; 

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="MParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IMParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] MParser.ExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.functionDecleration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDecleration([NotNull] MParser.FunctionDeclerationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.statementOrBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementOrBlock([NotNull] MParser.StatementOrBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstant([NotNull] MParser.ConstantContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.forStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] MParser.ForStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] MParser.ReturnStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.statementBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementBlock([NotNull] MParser.StatementBlockContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.creatorSizes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreatorSizes([NotNull] MParser.CreatorSizesContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] MParser.TypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.coreExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCoreExpression([NotNull] MParser.CoreExpressionContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.creator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCreator([NotNull] MParser.CreatorContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] MParser.IfStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] MParser.StatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] MParser.FunctionCallContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.arguments"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArguments([NotNull] MParser.ArgumentsContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] MParser.WhileStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] MParser.ProgramContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.primitiveType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimitiveType([NotNull] MParser.PrimitiveTypeContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] MParser.BreakStatementContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] MParser.ParametersContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.variableDecleration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDecleration([NotNull] MParser.VariableDeclerationContext context);

	/// <summary>
	/// Visit a parse tree produced by <see cref="MParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariable([NotNull] MParser.VariableContext context);
}
} // namespace Compiler.Parser.Antlr

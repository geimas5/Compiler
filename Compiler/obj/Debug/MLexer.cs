//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\mariusg\documents\visual studio 2013\Projects\Compiler\Compiler\Parser\Antlr\MLexer.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Compiler.Parser.Antlr {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class MLexer : Lexer {
	public const int
		Break=1, Void=2, Int=3, If=4, Else=5, For=6, Static=7, Return=8, New=9, 
		Double=10, String=11, While=12, LeftParen=13, RightParen=14, LeftBrace=15, 
		RightBrace=16, LeftBracket=17, RightBracket=18, Less=19, LessEqual=20, 
		Greater=21, GreaterEqual=22, Equal=23, NotEqual=24, Plus=25, Minus=26, 
		Star=27, StarStar=28, Div=29, Mod=30, AndAnd=31, OrOr=32, Not=33, Semi=34, 
		Colon=35, Comma=36, Assign=37, Dot=38, Identifier=39, IntegerConstant=40, 
		StringConstant=41, Whitespace=42, Comment=43, LineComment=44;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','"
	};
	public static readonly string[] ruleNames = {
		"Break", "Void", "Int", "If", "Else", "For", "Static", "Return", "New", 
		"Double", "String", "While", "LeftParen", "RightParen", "LeftBrace", "RightBrace", 
		"LeftBracket", "RightBracket", "Less", "LessEqual", "Greater", "GreaterEqual", 
		"Equal", "NotEqual", "Plus", "Minus", "Star", "StarStar", "Div", "Mod", 
		"AndAnd", "OrOr", "Not", "Semi", "Colon", "Comma", "Assign", "Dot", "Identifier", 
		"IntegerConstant", "StringConstant", "Whitespace", "Comment", "LineComment", 
		"Nondigit", "Digit", "Letter", "LetterAndDigit", "StringCharacters", "StringCharacter"
	};


	public MLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "MLexer.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2.\x127\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x4\x33\t\x33\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3"+
		"\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6"+
		"\x3\x6\x3\x6\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3"+
		"\b\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3"+
		"\v\x3\v\x3\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3"+
		"\r\x3\r\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11"+
		"\x3\x12\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x15\x3\x16"+
		"\x3\x16\x3\x17\x3\x17\x3\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x19"+
		"\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1D\x3\x1E"+
		"\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3 \x3!\x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3"+
		"$\x3%\x3%\x3&\x3&\x3\'\x3\'\x3(\x3(\a(\xE6\n(\f(\xE(\xE9\v(\x3)\x5)\xEC"+
		"\n)\x3)\x6)\xEF\n)\r)\xE)\xF0\x3*\x3*\x5*\xF5\n*\x3*\x3*\x3+\x6+\xFA\n"+
		"+\r+\xE+\xFB\x3+\x3+\x3,\x3,\x3,\x3,\a,\x104\n,\f,\xE,\x107\v,\x3,\x3"+
		",\x3,\x3,\x3,\x3-\x3-\x3-\x3-\a-\x112\n-\f-\xE-\x115\v-\x3-\x3-\x3.\x3"+
		".\x3/\x3/\x3\x30\x3\x30\x3\x31\x3\x31\x3\x32\x6\x32\x122\n\x32\r\x32\xE"+
		"\x32\x123\x3\x33\x3\x33\x3\x105\x2\x2\x34\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
		"\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K"+
		"\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2-Y\x2.[\x2\x2]\x2\x2_\x2\x2\x61\x2\x2"+
		"\x63\x2\x2\x65\x2\x2\x3\x2\b\x3\x2\x32;\x5\x2\v\f\xF\xF\"\"\x4\x2\f\f"+
		"\xF\xF\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\x4\x2$$"+
		"^^\x128\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2"+
		"\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2"+
		"\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19"+
		"\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2"+
		"\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)"+
		"\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3"+
		"\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x2"+
		"\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2\x2?\x3\x2\x2\x2\x2\x41"+
		"\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x2G\x3\x2\x2\x2\x2"+
		"I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2O\x3\x2\x2\x2\x2Q\x3\x2"+
		"\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2\x2\x2\x2Y\x3\x2\x2\x2"+
		"\x3g\x3\x2\x2\x2\x5m\x3\x2\x2\x2\ar\x3\x2\x2\x2\tv\x3\x2\x2\x2\vy\x3\x2"+
		"\x2\x2\r~\x3\x2\x2\x2\xF\x82\x3\x2\x2\x2\x11\x89\x3\x2\x2\x2\x13\x90\x3"+
		"\x2\x2\x2\x15\x94\x3\x2\x2\x2\x17\x9B\x3\x2\x2\x2\x19\xA2\x3\x2\x2\x2"+
		"\x1B\xA8\x3\x2\x2\x2\x1D\xAA\x3\x2\x2\x2\x1F\xAC\x3\x2\x2\x2!\xAE\x3\x2"+
		"\x2\x2#\xB0\x3\x2\x2\x2%\xB2\x3\x2\x2\x2\'\xB4\x3\x2\x2\x2)\xB6\x3\x2"+
		"\x2\x2+\xB9\x3\x2\x2\x2-\xBB\x3\x2\x2\x2/\xBE\x3\x2\x2\x2\x31\xC1\x3\x2"+
		"\x2\x2\x33\xC4\x3\x2\x2\x2\x35\xC6\x3\x2\x2\x2\x37\xC8\x3\x2\x2\x2\x39"+
		"\xCA\x3\x2\x2\x2;\xCD\x3\x2\x2\x2=\xCF\x3\x2\x2\x2?\xD1\x3\x2\x2\x2\x41"+
		"\xD4\x3\x2\x2\x2\x43\xD7\x3\x2\x2\x2\x45\xD9\x3\x2\x2\x2G\xDB\x3\x2\x2"+
		"\x2I\xDD\x3\x2\x2\x2K\xDF\x3\x2\x2\x2M\xE1\x3\x2\x2\x2O\xE3\x3\x2\x2\x2"+
		"Q\xEB\x3\x2\x2\x2S\xF2\x3\x2\x2\x2U\xF9\x3\x2\x2\x2W\xFF\x3\x2\x2\x2Y"+
		"\x10D\x3\x2\x2\x2[\x118\x3\x2\x2\x2]\x11A\x3\x2\x2\x2_\x11C\x3\x2\x2\x2"+
		"\x61\x11E\x3\x2\x2\x2\x63\x121\x3\x2\x2\x2\x65\x125\x3\x2\x2\x2gh\a\x64"+
		"\x2\x2hi\at\x2\x2ij\ag\x2\x2jk\a\x63\x2\x2kl\am\x2\x2l\x4\x3\x2\x2\x2"+
		"mn\ax\x2\x2no\aq\x2\x2op\ak\x2\x2pq\a\x66\x2\x2q\x6\x3\x2\x2\x2rs\ak\x2"+
		"\x2st\ap\x2\x2tu\av\x2\x2u\b\x3\x2\x2\x2vw\ak\x2\x2wx\ah\x2\x2x\n\x3\x2"+
		"\x2\x2yz\ag\x2\x2z{\an\x2\x2{|\au\x2\x2|}\ag\x2\x2}\f\x3\x2\x2\x2~\x7F"+
		"\ah\x2\x2\x7F\x80\aq\x2\x2\x80\x81\at\x2\x2\x81\xE\x3\x2\x2\x2\x82\x83"+
		"\au\x2\x2\x83\x84\av\x2\x2\x84\x85\a\x63\x2\x2\x85\x86\av\x2\x2\x86\x87"+
		"\ak\x2\x2\x87\x88\a\x65\x2\x2\x88\x10\x3\x2\x2\x2\x89\x8A\at\x2\x2\x8A"+
		"\x8B\ag\x2\x2\x8B\x8C\av\x2\x2\x8C\x8D\aw\x2\x2\x8D\x8E\at\x2\x2\x8E\x8F"+
		"\ap\x2\x2\x8F\x12\x3\x2\x2\x2\x90\x91\ap\x2\x2\x91\x92\ag\x2\x2\x92\x93"+
		"\ay\x2\x2\x93\x14\x3\x2\x2\x2\x94\x95\a\x66\x2\x2\x95\x96\aq\x2\x2\x96"+
		"\x97\aw\x2\x2\x97\x98\a\x64\x2\x2\x98\x99\an\x2\x2\x99\x9A\ag\x2\x2\x9A"+
		"\x16\x3\x2\x2\x2\x9B\x9C\au\x2\x2\x9C\x9D\av\x2\x2\x9D\x9E\at\x2\x2\x9E"+
		"\x9F\ak\x2\x2\x9F\xA0\ap\x2\x2\xA0\xA1\ai\x2\x2\xA1\x18\x3\x2\x2\x2\xA2"+
		"\xA3\ay\x2\x2\xA3\xA4\aj\x2\x2\xA4\xA5\ak\x2\x2\xA5\xA6\an\x2\x2\xA6\xA7"+
		"\ag\x2\x2\xA7\x1A\x3\x2\x2\x2\xA8\xA9\a*\x2\x2\xA9\x1C\x3\x2\x2\x2\xAA"+
		"\xAB\a+\x2\x2\xAB\x1E\x3\x2\x2\x2\xAC\xAD\a}\x2\x2\xAD \x3\x2\x2\x2\xAE"+
		"\xAF\a\x7F\x2\x2\xAF\"\x3\x2\x2\x2\xB0\xB1\a]\x2\x2\xB1$\x3\x2\x2\x2\xB2"+
		"\xB3\a_\x2\x2\xB3&\x3\x2\x2\x2\xB4\xB5\a>\x2\x2\xB5(\x3\x2\x2\x2\xB6\xB7"+
		"\a>\x2\x2\xB7\xB8\a?\x2\x2\xB8*\x3\x2\x2\x2\xB9\xBA\a@\x2\x2\xBA,\x3\x2"+
		"\x2\x2\xBB\xBC\a@\x2\x2\xBC\xBD\a?\x2\x2\xBD.\x3\x2\x2\x2\xBE\xBF\a?\x2"+
		"\x2\xBF\xC0\a?\x2\x2\xC0\x30\x3\x2\x2\x2\xC1\xC2\a#\x2\x2\xC2\xC3\a?\x2"+
		"\x2\xC3\x32\x3\x2\x2\x2\xC4\xC5\a-\x2\x2\xC5\x34\x3\x2\x2\x2\xC6\xC7\a"+
		"/\x2\x2\xC7\x36\x3\x2\x2\x2\xC8\xC9\a,\x2\x2\xC9\x38\x3\x2\x2\x2\xCA\xCB"+
		"\a,\x2\x2\xCB\xCC\a,\x2\x2\xCC:\x3\x2\x2\x2\xCD\xCE\a\x31\x2\x2\xCE<\x3"+
		"\x2\x2\x2\xCF\xD0\a\'\x2\x2\xD0>\x3\x2\x2\x2\xD1\xD2\a(\x2\x2\xD2\xD3"+
		"\a(\x2\x2\xD3@\x3\x2\x2\x2\xD4\xD5\a~\x2\x2\xD5\xD6\a~\x2\x2\xD6\x42\x3"+
		"\x2\x2\x2\xD7\xD8\a#\x2\x2\xD8\x44\x3\x2\x2\x2\xD9\xDA\a=\x2\x2\xDA\x46"+
		"\x3\x2\x2\x2\xDB\xDC\a<\x2\x2\xDCH\x3\x2\x2\x2\xDD\xDE\a.\x2\x2\xDEJ\x3"+
		"\x2\x2\x2\xDF\xE0\a?\x2\x2\xE0L\x3\x2\x2\x2\xE1\xE2\a\x30\x2\x2\xE2N\x3"+
		"\x2\x2\x2\xE3\xE7\x5_\x30\x2\xE4\xE6\x5\x61\x31\x2\xE5\xE4\x3\x2\x2\x2"+
		"\xE6\xE9\x3\x2\x2\x2\xE7\xE5\x3\x2\x2\x2\xE7\xE8\x3\x2\x2\x2\xE8P\x3\x2"+
		"\x2\x2\xE9\xE7\x3\x2\x2\x2\xEA\xEC\a/\x2\x2\xEB\xEA\x3\x2\x2\x2\xEB\xEC"+
		"\x3\x2\x2\x2\xEC\xEE\x3\x2\x2\x2\xED\xEF\t\x2\x2\x2\xEE\xED\x3\x2\x2\x2"+
		"\xEF\xF0\x3\x2\x2\x2\xF0\xEE\x3\x2\x2\x2\xF0\xF1\x3\x2\x2\x2\xF1R\x3\x2"+
		"\x2\x2\xF2\xF4\a$\x2\x2\xF3\xF5\x5\x63\x32\x2\xF4\xF3\x3\x2\x2\x2\xF4"+
		"\xF5\x3\x2\x2\x2\xF5\xF6\x3\x2\x2\x2\xF6\xF7\a$\x2\x2\xF7T\x3\x2\x2\x2"+
		"\xF8\xFA\t\x3\x2\x2\xF9\xF8\x3\x2\x2\x2\xFA\xFB\x3\x2\x2\x2\xFB\xF9\x3"+
		"\x2\x2\x2\xFB\xFC\x3\x2\x2\x2\xFC\xFD\x3\x2\x2\x2\xFD\xFE\b+\x2\x2\xFE"+
		"V\x3\x2\x2\x2\xFF\x100\a\x31\x2\x2\x100\x101\a,\x2\x2\x101\x105\x3\x2"+
		"\x2\x2\x102\x104\v\x2\x2\x2\x103\x102\x3\x2\x2\x2\x104\x107\x3\x2\x2\x2"+
		"\x105\x106\x3\x2\x2\x2\x105\x103\x3\x2\x2\x2\x106\x108\x3\x2\x2\x2\x107"+
		"\x105\x3\x2\x2\x2\x108\x109\a,\x2\x2\x109\x10A\a\x31\x2\x2\x10A\x10B\x3"+
		"\x2\x2\x2\x10B\x10C\b,\x2\x2\x10CX\x3\x2\x2\x2\x10D\x10E\a\x31\x2\x2\x10E"+
		"\x10F\a\x31\x2\x2\x10F\x113\x3\x2\x2\x2\x110\x112\n\x4\x2\x2\x111\x110"+
		"\x3\x2\x2\x2\x112\x115\x3\x2\x2\x2\x113\x111\x3\x2\x2\x2\x113\x114\x3"+
		"\x2\x2\x2\x114\x116\x3\x2\x2\x2\x115\x113\x3\x2\x2\x2\x116\x117\b-\x2"+
		"\x2\x117Z\x3\x2\x2\x2\x118\x119\t\x5\x2\x2\x119\\\x3\x2\x2\x2\x11A\x11B"+
		"\t\x2\x2\x2\x11B^\x3\x2\x2\x2\x11C\x11D\t\x5\x2\x2\x11D`\x3\x2\x2\x2\x11E"+
		"\x11F\t\x6\x2\x2\x11F\x62\x3\x2\x2\x2\x120\x122\x5\x65\x33\x2\x121\x120"+
		"\x3\x2\x2\x2\x122\x123\x3\x2\x2\x2\x123\x121\x3\x2\x2\x2\x123\x124\x3"+
		"\x2\x2\x2\x124\x64\x3\x2\x2\x2\x125\x126\n\a\x2\x2\x126\x66\x3\x2\x2\x2"+
		"\v\x2\xE7\xEB\xF0\xF4\xFB\x105\x113\x123\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Compiler.Parser.Antlr

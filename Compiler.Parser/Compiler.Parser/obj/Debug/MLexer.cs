//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\mariusg\documents\visual studio 2013\Projects\Compiler\Compiler.Parser\Compiler.Parser\MLexer.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Compiler.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class MLexer : Lexer {
	public const int
		Break=1, Void=2, Int=3, If=4, Else=5, For=6, Static=7, Return=8, New=9, 
		Double=10, String=11, LeftParen=12, RightParen=13, LeftBrace=14, RightBrace=15, 
		LeftBracket=16, RightBracket=17, Less=18, LessEqual=19, Greater=20, GreaterEqual=21, 
		Equal=22, NotEqual=23, Plus=24, Minus=25, Star=26, StarStar=27, Div=28, 
		Mod=29, AndAnd=30, OrOr=31, Not=32, Semi=33, Colon=34, Comma=35, Assign=36, 
		Dot=37, Identifier=38, IntegerConstant=39, StringLiteral=40, Whitespace=41, 
		Comment=42, LineComment=43;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'"
	};
	public static readonly string[] ruleNames = {
		"Break", "Void", "Int", "If", "Else", "For", "Static", "Return", "New", 
		"Double", "String", "LeftParen", "RightParen", "LeftBrace", "RightBrace", 
		"LeftBracket", "RightBracket", "Less", "LessEqual", "Greater", "GreaterEqual", 
		"Equal", "NotEqual", "Plus", "Minus", "Star", "StarStar", "Div", "Mod", 
		"AndAnd", "OrOr", "Not", "Semi", "Colon", "Comma", "Assign", "Dot", "Identifier", 
		"IntegerConstant", "StringLiteral", "Whitespace", "Comment", "LineComment", 
		"Nondigit", "Digit", "Letter", "LetterAndDigit", "StringCharacters", "StringCharacter"
	};


	public MLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	public override string GrammarFileName { get { return "MLexer.g4"; } }

	public override string[] TokenNames { get { return tokenNames; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2-\x11F\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x4$\t$\x4%\t%\x4&\t&\x4\'\t\'\x4(\t(\x4)\t)\x4*\t"+
		"*\x4+\t+\x4,\t,\x4-\t-\x4.\t.\x4/\t/\x4\x30\t\x30\x4\x31\t\x31\x4\x32"+
		"\t\x32\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x3\x3"+
		"\x3\x3\x4\x3\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x5\x3\x6\x3\x6\x3\x6\x3\x6"+
		"\x3\x6\x3\a\x3\a\x3\a\x3\a\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\b\x3\t\x3"+
		"\t\x3\t\x3\t\x3\t\x3\t\x3\t\x3\n\x3\n\x3\n\x3\n\x3\v\x3\v\x3\v\x3\v\x3"+
		"\v\x3\v\x3\v\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE"+
		"\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12\x3\x12\x3\x13\x3\x13\x3"+
		"\x14\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x16\x3\x17\x3\x17\x3"+
		"\x17\x3\x18\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3"+
		"\x1C\x3\x1C\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3\x1F\x3"+
		" \x3 \x3 \x3!\x3!\x3\"\x3\"\x3#\x3#\x3$\x3$\x3%\x3%\x3&\x3&\x3\'\x3\'"+
		"\a\'\xDE\n\'\f\'\xE\'\xE1\v\'\x3(\x5(\xE4\n(\x3(\x6(\xE7\n(\r(\xE(\xE8"+
		"\x3)\x3)\x5)\xED\n)\x3)\x3)\x3*\x6*\xF2\n*\r*\xE*\xF3\x3*\x3*\x3+\x3+"+
		"\x3+\x3+\a+\xFC\n+\f+\xE+\xFF\v+\x3+\x3+\x3+\x3+\x3+\x3,\x3,\x3,\x3,\a"+
		",\x10A\n,\f,\xE,\x10D\v,\x3,\x3,\x3-\x3-\x3.\x3.\x3/\x3/\x3\x30\x3\x30"+
		"\x3\x31\x6\x31\x11A\n\x31\r\x31\xE\x31\x11B\x3\x32\x3\x32\x3\xFD\x2\x2"+
		"\x33\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n"+
		"\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11"+
		"!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31"+
		"\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2\x1D\x39\x2\x1E;\x2\x1F=\x2 ?\x2!"+
		"\x41\x2\"\x43\x2#\x45\x2$G\x2%I\x2&K\x2\'M\x2(O\x2)Q\x2*S\x2+U\x2,W\x2"+
		"-Y\x2\x2[\x2\x2]\x2\x2_\x2\x2\x61\x2\x2\x63\x2\x2\x3\x2\b\x3\x2\x32;\x4"+
		"\x2\v\f\"\"\x4\x2\f\f\xF\xF\x5\x2\x43\\\x61\x61\x63|\x6\x2\x32;\x43\\"+
		"\x61\x61\x63|\x4\x2$$^^\x120\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a"+
		"\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2\x2\x2\x2\xF"+
		"\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15\x3\x2\x2\x2"+
		"\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2\x2\x1D\x3\x2"+
		"\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2\x2%\x3\x2\x2"+
		"\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-\x3\x2\x2\x2\x2"+
		"/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2\x35\x3\x2\x2\x2"+
		"\x2\x37\x3\x2\x2\x2\x2\x39\x3\x2\x2\x2\x2;\x3\x2\x2\x2\x2=\x3\x2\x2\x2"+
		"\x2?\x3\x2\x2\x2\x2\x41\x3\x2\x2\x2\x2\x43\x3\x2\x2\x2\x2\x45\x3\x2\x2"+
		"\x2\x2G\x3\x2\x2\x2\x2I\x3\x2\x2\x2\x2K\x3\x2\x2\x2\x2M\x3\x2\x2\x2\x2"+
		"O\x3\x2\x2\x2\x2Q\x3\x2\x2\x2\x2S\x3\x2\x2\x2\x2U\x3\x2\x2\x2\x2W\x3\x2"+
		"\x2\x2\x3\x65\x3\x2\x2\x2\x5k\x3\x2\x2\x2\ap\x3\x2\x2\x2\tt\x3\x2\x2\x2"+
		"\vw\x3\x2\x2\x2\r|\x3\x2\x2\x2\xF\x80\x3\x2\x2\x2\x11\x87\x3\x2\x2\x2"+
		"\x13\x8E\x3\x2\x2\x2\x15\x92\x3\x2\x2\x2\x17\x99\x3\x2\x2\x2\x19\xA0\x3"+
		"\x2\x2\x2\x1B\xA2\x3\x2\x2\x2\x1D\xA4\x3\x2\x2\x2\x1F\xA6\x3\x2\x2\x2"+
		"!\xA8\x3\x2\x2\x2#\xAA\x3\x2\x2\x2%\xAC\x3\x2\x2\x2\'\xAE\x3\x2\x2\x2"+
		")\xB1\x3\x2\x2\x2+\xB3\x3\x2\x2\x2-\xB6\x3\x2\x2\x2/\xB9\x3\x2\x2\x2\x31"+
		"\xBC\x3\x2\x2\x2\x33\xBE\x3\x2\x2\x2\x35\xC0\x3\x2\x2\x2\x37\xC2\x3\x2"+
		"\x2\x2\x39\xC5\x3\x2\x2\x2;\xC7\x3\x2\x2\x2=\xC9\x3\x2\x2\x2?\xCC\x3\x2"+
		"\x2\x2\x41\xCF\x3\x2\x2\x2\x43\xD1\x3\x2\x2\x2\x45\xD3\x3\x2\x2\x2G\xD5"+
		"\x3\x2\x2\x2I\xD7\x3\x2\x2\x2K\xD9\x3\x2\x2\x2M\xDB\x3\x2\x2\x2O\xE3\x3"+
		"\x2\x2\x2Q\xEA\x3\x2\x2\x2S\xF1\x3\x2\x2\x2U\xF7\x3\x2\x2\x2W\x105\x3"+
		"\x2\x2\x2Y\x110\x3\x2\x2\x2[\x112\x3\x2\x2\x2]\x114\x3\x2\x2\x2_\x116"+
		"\x3\x2\x2\x2\x61\x119\x3\x2\x2\x2\x63\x11D\x3\x2\x2\x2\x65\x66\a\x64\x2"+
		"\x2\x66g\at\x2\x2gh\ag\x2\x2hi\a\x63\x2\x2ij\am\x2\x2j\x4\x3\x2\x2\x2"+
		"kl\ax\x2\x2lm\aq\x2\x2mn\ak\x2\x2no\a\x66\x2\x2o\x6\x3\x2\x2\x2pq\ak\x2"+
		"\x2qr\ap\x2\x2rs\av\x2\x2s\b\x3\x2\x2\x2tu\ak\x2\x2uv\ah\x2\x2v\n\x3\x2"+
		"\x2\x2wx\ag\x2\x2xy\an\x2\x2yz\au\x2\x2z{\ag\x2\x2{\f\x3\x2\x2\x2|}\a"+
		"h\x2\x2}~\aq\x2\x2~\x7F\at\x2\x2\x7F\xE\x3\x2\x2\x2\x80\x81\au\x2\x2\x81"+
		"\x82\av\x2\x2\x82\x83\a\x63\x2\x2\x83\x84\av\x2\x2\x84\x85\ak\x2\x2\x85"+
		"\x86\a\x65\x2\x2\x86\x10\x3\x2\x2\x2\x87\x88\at\x2\x2\x88\x89\ag\x2\x2"+
		"\x89\x8A\av\x2\x2\x8A\x8B\aw\x2\x2\x8B\x8C\at\x2\x2\x8C\x8D\ap\x2\x2\x8D"+
		"\x12\x3\x2\x2\x2\x8E\x8F\ap\x2\x2\x8F\x90\ag\x2\x2\x90\x91\ay\x2\x2\x91"+
		"\x14\x3\x2\x2\x2\x92\x93\a\x66\x2\x2\x93\x94\aq\x2\x2\x94\x95\aw\x2\x2"+
		"\x95\x96\a\x64\x2\x2\x96\x97\an\x2\x2\x97\x98\ag\x2\x2\x98\x16\x3\x2\x2"+
		"\x2\x99\x9A\au\x2\x2\x9A\x9B\av\x2\x2\x9B\x9C\at\x2\x2\x9C\x9D\ak\x2\x2"+
		"\x9D\x9E\ap\x2\x2\x9E\x9F\ai\x2\x2\x9F\x18\x3\x2\x2\x2\xA0\xA1\a*\x2\x2"+
		"\xA1\x1A\x3\x2\x2\x2\xA2\xA3\a+\x2\x2\xA3\x1C\x3\x2\x2\x2\xA4\xA5\a}\x2"+
		"\x2\xA5\x1E\x3\x2\x2\x2\xA6\xA7\a\x7F\x2\x2\xA7 \x3\x2\x2\x2\xA8\xA9\a"+
		"]\x2\x2\xA9\"\x3\x2\x2\x2\xAA\xAB\a_\x2\x2\xAB$\x3\x2\x2\x2\xAC\xAD\a"+
		">\x2\x2\xAD&\x3\x2\x2\x2\xAE\xAF\a>\x2\x2\xAF\xB0\a?\x2\x2\xB0(\x3\x2"+
		"\x2\x2\xB1\xB2\a@\x2\x2\xB2*\x3\x2\x2\x2\xB3\xB4\a@\x2\x2\xB4\xB5\a?\x2"+
		"\x2\xB5,\x3\x2\x2\x2\xB6\xB7\a?\x2\x2\xB7\xB8\a?\x2\x2\xB8.\x3\x2\x2\x2"+
		"\xB9\xBA\a#\x2\x2\xBA\xBB\a?\x2\x2\xBB\x30\x3\x2\x2\x2\xBC\xBD\a-\x2\x2"+
		"\xBD\x32\x3\x2\x2\x2\xBE\xBF\a/\x2\x2\xBF\x34\x3\x2\x2\x2\xC0\xC1\a,\x2"+
		"\x2\xC1\x36\x3\x2\x2\x2\xC2\xC3\a,\x2\x2\xC3\xC4\a,\x2\x2\xC4\x38\x3\x2"+
		"\x2\x2\xC5\xC6\a\x31\x2\x2\xC6:\x3\x2\x2\x2\xC7\xC8\a\'\x2\x2\xC8<\x3"+
		"\x2\x2\x2\xC9\xCA\a(\x2\x2\xCA\xCB\a(\x2\x2\xCB>\x3\x2\x2\x2\xCC\xCD\a"+
		"~\x2\x2\xCD\xCE\a~\x2\x2\xCE@\x3\x2\x2\x2\xCF\xD0\a#\x2\x2\xD0\x42\x3"+
		"\x2\x2\x2\xD1\xD2\a=\x2\x2\xD2\x44\x3\x2\x2\x2\xD3\xD4\a<\x2\x2\xD4\x46"+
		"\x3\x2\x2\x2\xD5\xD6\a.\x2\x2\xD6H\x3\x2\x2\x2\xD7\xD8\a?\x2\x2\xD8J\x3"+
		"\x2\x2\x2\xD9\xDA\a\x30\x2\x2\xDAL\x3\x2\x2\x2\xDB\xDF\x5]/\x2\xDC\xDE"+
		"\x5_\x30\x2\xDD\xDC\x3\x2\x2\x2\xDE\xE1\x3\x2\x2\x2\xDF\xDD\x3\x2\x2\x2"+
		"\xDF\xE0\x3\x2\x2\x2\xE0N\x3\x2\x2\x2\xE1\xDF\x3\x2\x2\x2\xE2\xE4\a/\x2"+
		"\x2\xE3\xE2\x3\x2\x2\x2\xE3\xE4\x3\x2\x2\x2\xE4\xE6\x3\x2\x2\x2\xE5\xE7"+
		"\t\x2\x2\x2\xE6\xE5\x3\x2\x2\x2\xE7\xE8\x3\x2\x2\x2\xE8\xE6\x3\x2\x2\x2"+
		"\xE8\xE9\x3\x2\x2\x2\xE9P\x3\x2\x2\x2\xEA\xEC\a$\x2\x2\xEB\xED\x5\x61"+
		"\x31\x2\xEC\xEB\x3\x2\x2\x2\xEC\xED\x3\x2\x2\x2\xED\xEE\x3\x2\x2\x2\xEE"+
		"\xEF\a$\x2\x2\xEFR\x3\x2\x2\x2\xF0\xF2\t\x3\x2\x2\xF1\xF0\x3\x2\x2\x2"+
		"\xF2\xF3\x3\x2\x2\x2\xF3\xF1\x3\x2\x2\x2\xF3\xF4\x3\x2\x2\x2\xF4\xF5\x3"+
		"\x2\x2\x2\xF5\xF6\b*\x2\x2\xF6T\x3\x2\x2\x2\xF7\xF8\a\x31\x2\x2\xF8\xF9"+
		"\a,\x2\x2\xF9\xFD\x3\x2\x2\x2\xFA\xFC\v\x2\x2\x2\xFB\xFA\x3\x2\x2\x2\xFC"+
		"\xFF\x3\x2\x2\x2\xFD\xFE\x3\x2\x2\x2\xFD\xFB\x3\x2\x2\x2\xFE\x100\x3\x2"+
		"\x2\x2\xFF\xFD\x3\x2\x2\x2\x100\x101\a,\x2\x2\x101\x102\a\x31\x2\x2\x102"+
		"\x103\x3\x2\x2\x2\x103\x104\b+\x2\x2\x104V\x3\x2\x2\x2\x105\x106\a\x31"+
		"\x2\x2\x106\x107\a\x31\x2\x2\x107\x10B\x3\x2\x2\x2\x108\x10A\n\x4\x2\x2"+
		"\x109\x108\x3\x2\x2\x2\x10A\x10D\x3\x2\x2\x2\x10B\x109\x3\x2\x2\x2\x10B"+
		"\x10C\x3\x2\x2\x2\x10C\x10E\x3\x2\x2\x2\x10D\x10B\x3\x2\x2\x2\x10E\x10F"+
		"\b,\x2\x2\x10FX\x3\x2\x2\x2\x110\x111\t\x5\x2\x2\x111Z\x3\x2\x2\x2\x112"+
		"\x113\t\x2\x2\x2\x113\\\x3\x2\x2\x2\x114\x115\t\x5\x2\x2\x115^\x3\x2\x2"+
		"\x2\x116\x117\t\x6\x2\x2\x117`\x3\x2\x2\x2\x118\x11A\x5\x63\x32\x2\x119"+
		"\x118\x3\x2\x2\x2\x11A\x11B\x3\x2\x2\x2\x11B\x119\x3\x2\x2\x2\x11B\x11C"+
		"\x3\x2\x2\x2\x11C\x62\x3\x2\x2\x2\x11D\x11E\n\a\x2\x2\x11E\x64\x3\x2\x2"+
		"\x2\v\x2\xDF\xE3\xE8\xEC\xF3\xFD\x10B\x11B\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace Compiler.Parser
